(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{868:function(n,t,e){"use strict";e.r(t);var s=e(13),r=Object(s.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"nginx下载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx下载"}},[n._v("#")]),n._v(" nginx下载")]),n._v(" "),e("p",[e("strong",[n._v("正向代理，客户端不想让服务器知道客户端的ip，所以让代理服务器去访问，再返回给客户端。\n反向代理，服务器不想客户端知道是哪个服务器响应的，所以让代理服务器去分配，让空闲的服务器去响应。")])]),n._v(" "),e("p",[e("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("下载地址"),e("OutboundLink")],1)]),n._v(" "),e("p",[n._v("Stable version 稳定版")]),n._v(" "),e("h2",{attrs:{id:"nginx-基本命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx-基本命令"}},[n._v("#")]),n._v(" nginx 基本命令")]),n._v(" "),e("p",[n._v("解压，双击"),e("code",[n._v("双击nginx.exe启动")])]),n._v(" "),e("p",[n._v("cmd 命令启动"),e("code",[n._v("start nginx")])]),n._v(" "),e("ul",[e("li",[n._v("nginx -t  检查配合是否正确")]),n._v(" "),e("li",[n._v("nginx -s quit/nginx -s stop 关闭")]),n._v(" "),e("li",[n._v("nginx -s reload 重新加载nginx配置")])]),n._v(" "),e("h2",{attrs:{id:"location-的匹配规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#location-的匹配规则"}},[n._v("#")]),n._v(" location 的匹配规则")]),n._v(" "),e("p",[n._v("共四种方式")]),n._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[n._v("location"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("~")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("~")]),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("*")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("|")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("^")]),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("~")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),n._v(" url "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])])]),e("ul",[e("li",[n._v("= ：精确匹配，用于不含正则表达式的url前，要求字符串与url严格匹配，完全相等时，才能停止向下搜索并处理请求")]),n._v(" "),e("li",[n._v("^~：用于不含正则表达式的url前，要求ngin服务器找到表示url和字符串匹配度最高的location后，立即使用此location处理请求，而不再匹配")]),n._v(" "),e("li",[n._v("~ ：最佳匹配，用于表示url包含正则表达式，并且区分大小写。")]),n._v(" "),e("li",[n._v("~*：与~一样，只是不区分大小写")])]),n._v(" "),e("blockquote",[e("p",[n._v("如果 url 包含正则表达式，则不需要 ~ 作为开头表示\nnginx的匹配具有优先顺序，一旦匹配上就会立马退出，不再进行向下匹配")])]),n._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7082655545491980301#heading-0",target:"_blank",rel:"noopener noreferrer"}},[n._v("作为一名前端，该如何理解Nginx？"),e("OutboundLink")],1),n._v("、\n"),e("a",{attrs:{href:"https://juejin.cn/post/7052952117425733663#heading-6",target:"_blank",rel:"noopener noreferrer"}},[n._v("写给前端新人的nginx教程"),e("OutboundLink")],1)]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    gzip_static  on;\n\tgzip_proxied expired no-cache no-store private auth;\n\n\t#开启动态gzip压缩输出 优先级小于静态，即同时开启后如果存在同名的 .gz 文件则会直接读取，不会进行压缩\n\tgzip on; \n\t#允许压缩的页面的最小字节数,页面字节数从header偷得content-length中获取.默认是0,不管页面多大都进行压缩.建议设置成大于1k的字节数,小于1k可能会越压越大\n\tgzip_min_length 1k; \n\t#设置用于处理请求压缩的缓冲区数量和大小。比如32 4K表示按照内存页（one memory page）大小以4K为单位（即一个系统中内存页为4K），申请32倍的内存空间。建议此项不设置，使用默认值。\n\tgzip_buffers 32 4k; \n\t#压缩版本（默认1.1,目前大部分浏览器已经支持gzip解压.前端如果是squid2.5请使用1.0）\n\tgzip_http_version 1.1; \n\t#压缩等级.1压缩比最小,处理速度快.9压缩比最大,比较消耗cpu资源,处理速度最慢,但是因为压缩比最大,所以包最小,传输速度快\n\tgzip_comp_level 2; \n\t#压缩类型,默认就已经包含text/html,所以下面就不用再写了,写上去也不会有问题,但是会有一个warn.\n\tgzip_types text/plain application/javascript application/x-javascript text/css application/xml \n\t\t\ttext/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject \n\t\t\tfont/ttf font/opentype font/x-woff image/svg+xml;\n\t#选项可以让前端的缓存服务器缓存经过gzip压缩的页面.例如:用squid缓存经过nginx压缩的数据\n\tgzip_vary on;\n\t#IE6对Gzip不怎么友好，不给它Gzip了\n\tgzip_disable \"MSIE [1-6]\\.\";\n\n    server {\n        listen       8090;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html/dist;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n    \n    \t#前端App-demo项目\n       server {\n        listen       8098;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html/app;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n    \n       #前端主应用\n       server {\n        listen       9001;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html/web;\n            index  index.html index.htm;\n            try_files $uri $uri/ /index.html;\n        }\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n    \n#\t\tserver {\n\t\t\n#\t\tlisten       8098;\n#        server_name  localhost;\n\t\t\n#\t\tlocation = /index.html {\n#\t\t  add_header Cache-Control no-cache;\n#\t\t  add_header Access-Control-Allow-Origin *;\n#\t\t  root  html/app;\n#\t\t}\n\t\t\n#\t\tlocation / {\n#\t\t\tadd_header Access-Control-Allow-Origin *;\n#\t\t\tadd_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';\n#\t\t\tadd_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';\n\n#\t\t\tif ($request_method = 'OPTIONS') {\n#\t\t\t\treturn 204;\n#\t\t\t}\n#\t\t\troot html/app;\n#\t\t\ttry_files $uri $uri/ /index.html;\n#\t\t\tindex  index.html index.htm;\n#\t\t}\n\t\t\n#        error_page   500 502 503 504  /50x.html;\n#        location = /50x.html {\n#            root   html;\n#        }\n#\t}\n\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);