(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{913:function(t,a,s){"use strict";s.r(a);var e=s(13),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue-常见面试整理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-常见面试整理"}},[t._v("#")]),t._v(" VUE 常见面试整理")]),t._v(" "),s("h2",{attrs:{id:"生命周期钩子函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期钩子函数"}},[t._v("#")]),t._v(" 生命周期钩子函数")]),t._v(" "),s("p",[s("strong",[t._v("beforeCreate（初始化界面前）")])]),t._v(" "),s("p",[s("strong",[t._v("created（初始化界面后）")])]),t._v(" "),s("p",[s("strong",[t._v("beforeMount（渲染dom前）")])]),t._v(" "),s("p",[s("strong",[t._v("mounted（渲染dom后）")])]),t._v(" "),s("p",[s("strong",[t._v("beforeUpdate（更新数据前）")])]),t._v(" "),s("p",[s("strong",[t._v("updated（更新数据后）")])]),t._v(" "),s("p",[s("strong",[t._v("beforeDestroy（卸载组件前）")])]),t._v(" "),s("p",[s("strong",[t._v("destroyed（卸载组件后）")])]),t._v(" "),s("p",[s("strong",[t._v("钩子函数，其实和回调是一个概念")]),t._v("，当系统执行到某处时，检查是否有hook，有则回调。说的更直白一点，每个组件都有属性，方法和事件。所有的生命周期都归于事件，在某个时刻自动执行。"),s("strong",[t._v("生老病死")])]),t._v(" "),s("p",[t._v("我们首先需要创建一个实例，也就是在 n"),s("strong",[t._v("ew Vue ( ) 的对象过程当中，首先执行了init")]),t._v("（init是vue组件里面默认去执行的），在"),s("strong",[t._v("init的过程当中")]),t._v("首先调用了"),s("strong",[t._v("beforeCreate")]),t._v("，然后在injections（注射）和reactivity（反应性）的时候，它会再去调用created。所以在init的时候，事件已经调用了，我们在beforeCreate的时候千万不要去修改data里面赋值的数据，最早也要放在created里面去做（添加一些行为）。")]),t._v(" "),s("p",[t._v("created完成之后，它会去"),s("strong",[t._v("判断instance（实例）里面是否含有“el”option（选项）")]),t._v("，如果"),s("strong",[t._v("没有")]),t._v("的话，它会调用"),s("strong",[t._v("vm.$mount(el)"),s("strong",[t._v("这个方法，然后执行下一步；如果")]),t._v("有")]),t._v("的话，"),s("strong",[t._v("直接执行下一步")]),t._v("。紧接着会"),s("strong",[t._v("判断是否含有“template”这个选项")]),t._v("，如果"),s("strong",[t._v("有")]),t._v("的话，它会"),s("strong",[t._v("把template解析成一个render function")]),t._v(" ，即template编译的过程，结果是解析成了render函数")]),t._v(" "),s("p",[s("strong",[t._v("render函数是发生在beforeMount和mounted之间的")]),t._v("，这也从侧面说明了，在"),s("strong",[t._v("beforeMount")]),t._v("的时候，"),s("strong",[t._v("$el还只是我们在HTML里面写的节点")]),t._v("，然后到"),s("strong",[t._v("mounted")]),t._v("的时候，它就把"),s("strong",[t._v("渲染出来的内容挂载到了DOM节点上")]),t._v("。这中间的过程其实是执行了render function的内容。")]),t._v(" "),s("p",[t._v("beforeMount在有了render function的时候才会执行，当执行完render function之后，就会调用mounted这个钩子，在mounted挂载完毕之后，这个实例就算是走完流程了。")]),t._v(" "),s("p",[t._v("另外还有 "),s("code",[t._v("keep-alive")]),t._v(" 独有的生命周期，分别为 "),s("code",[t._v("activated")]),t._v(" 和 "),s("code",[t._v("deactivated")]),t._v(" 。用 "),s("code",[t._v("keep-alive")]),t._v(" 包裹的组件在切换时不会进行销毁，而是缓存到内存中并执行 "),s("code",[t._v("deactivated")]),t._v(" 钩子函数，命中缓存渲染后会执行 "),s("code",[t._v("actived")]),t._v(" 钩子函数。")]),t._v(" "),s("h2",{attrs:{id:"父子组件生命周期调用顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子组件生命周期调用顺序"}},[t._v("#")]),t._v(" 父子组件生命周期调用顺序")]),t._v(" "),s("p",[t._v("父组件初始化完，再初始化子组件")]),t._v(" "),s("p",[t._v("子组件渲染完，再渲染父组件")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.loli.net/2020/04/20/RJFVdzEpo9Btc5n.png",alt:""}})]),t._v(" "),s("p",[t._v("同理，组件的销毁操作是先父后子，销毁完成的顺序是先子后父。")]),t._v(" "),s("h2",{attrs:{id:"react-和-vue的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-和-vue的区别"}},[t._v("#")]),t._v(" React 和 Vue的区别")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("设计思想:")]),t._v(" "),s("p",[t._v("vue的官网中说它是一款渐进式框架，采用自底向上增量开发的设计。")]),t._v(" "),s("p",[t._v("react主张函数式编程，所以推崇纯组件，数据不可变，单向数据流，当然需要双向的地方也可以手动实现，比如借助 onChange 和 setState 来实现一个双向的数据流。")])]),t._v(" "),s("li",[s("p",[t._v("编写语法:")]),t._v(" "),s("p",[t._v("Vue推荐的做法是webpack+vue-loader的单文件组件格式，vue保留了html、css、js分离的写法")]),t._v(" "),s("p",[t._v("React的开发者可能知道，react是没有模板的，直接就是一个渲染函数，它中间返回的就是一个虚拟DOM树，React推荐的做法是 JSX+inline style，也就是把 html 和 css 都写进js里，即"),s("code",[t._v("all in js")])])]),t._v(" "),s("li",[s("p",[t._v("构建工具:")]),t._v(" "),s("p",[t._v("vue提供了CLI 脚手架，可以帮助你非常容易地构建项目")]),t._v(" "),s("p",[t._v("React 在这方面也提供了 create-react-app，但是现在还存在一些局限性，不能配置等等")])]),t._v(" "),s("li",[s("p",[t._v("数据绑定:")]),t._v(" "),s("p",[t._v("vue是实现了双向数据绑定的mvvm框架，当视图改变更新模型层，当模型层改变更新视图层。\n在vue中，使用了双向绑定技术，就是View的变化能实时让Model发生变化，而Model的变化也能实时更新到View。")]),t._v(" "),s("p",[t._v("react是单向数据流，react中属性是不允许更改的，状态是允许更改的。\nreact中组件不允许通过this.state这种方式直接更改组件的状态。自身设置的状态，可以通过setState来进行更改。\n(注意：React中setState是异步的，导致获取dom可能拿的还是之前的内容，\n所以我们需要在setState第二个参数（回调函数）中获取更新后的新的内容。)")])]),t._v(" "),s("li",[s("p",[t._v("diff算法:")]),t._v(" "),s("p",[t._v("vue中diff算法实现流程:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("1. 内存中构建虚拟 dom\n2. 将内存中虚拟 dom 渲染成真实 dom\n3. 当数据发生改变时，将之前的虚拟 dom 树结合新的数据生成新的虚拟 dom\n4. 将此次生成好的虚拟dom树和上一次的虚拟dom树进行一次比对(diff算法进行比对)，来更新只需要被替换的DOM，而不是全部重绘。在Diff算法中，只平层的比较前后两棵DOM树的节点，没有进行深度的遍历。\n5. 会将对比出来的差异进行重新渲染\n")])])]),s("p",[t._v("react中diff算法实现流程:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("DOM结构发生改变-----直接卸载并重新create\nDOM结构一样-----不会卸载,但是会update变化的内容\n所有同一层级的子节点.他们都可以通过key来区分-----同时遵循1.2两点(其实这个key的存在与否只会影响diff算法的复杂度,换言之,你不加key的情况下,diff算法就会以暴力的方式去根据一二的策略更新,但是你加了key,diff算法会引入一些另外的操作)\n")])])])])]),t._v(" "),s("p",[t._v("参考:"),s("a",{attrs:{href:"https://juejin.im/post/5dad09be518825393e52d1bd",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端框架用vue还是react？清晰对比两者差异"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"组件通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[t._v("#")]),t._v(" 组件通信")]),t._v(" "),s("ul",[s("li",[t._v("父子组件通信")]),t._v(" "),s("li",[t._v("兄弟组件通信")]),t._v(" "),s("li",[t._v("跨多层级组件通信")]),t._v(" "),s("li",[t._v("任意组件")])]),t._v(" "),s("h3",{attrs:{id:"父子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#父子"}},[t._v("#")]),t._v(" 父子")]),t._v(" "),s("p",[t._v("父组件通过 "),s("code",[t._v("props")]),t._v(" 传递数据给子组件，子组件通过 "),s("code",[t._v("emit")]),t._v(" 发送事件传递数据给父组件，这两种方式是最常用的父子通信实现办法。  "),s("strong",[t._v("单向数据流")]),t._v("，父组件通过 "),s("code",[t._v("props")]),t._v(" 传递数据，子组件不能直接修改 "),s("code",[t._v("props")]),t._v("， 而是必须通过发送事件的方式告知父组件修改数据。父组件通过v-on监听并接收参数")]),t._v(" "),s("p",[t._v("当然我们还可以通过访问 "),s("code",[t._v("$parent")]),t._v(" 或者 "),s("code",[t._v("$children")]),t._v(" 对象来访问组件实例中的方法和数据。")]),t._v(" "),s("p",[s("strong",[t._v("v-model")])]),t._v(" "),s("p",[t._v("因为 "),s("code",[t._v("v-model")]),t._v(" 默认会解析成名为 "),s("code",[t._v("value")]),t._v(" 的 "),s("code",[t._v("prop")]),t._v(" 和名为 "),s("code",[t._v("input")]),t._v(" 的事件。这种语法糖的方式是典型的双向绑定，常用于 UI 控件上，但是究其根本，还是通过事件的方法让父组件修改数据。")]),t._v(" "),s("div",{staticClass:"language-! extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("在一个组件上使用v-model，默认会为组件绑定名为value的prop和名为input的事件\n")])])]),s("h3",{attrs:{id:"兄弟"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#兄弟"}},[t._v("#")]),t._v(" "),s("strong",[t._v("兄弟")])]),t._v(" "),s("h4",{attrs:{id:"eventbus"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eventbus"}},[t._v("#")]),t._v(" "),s("strong",[t._v("eventBus")])]),t._v(" "),s("p",[t._v("初始化：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// event-bus.js\n\nimport Vue from 'vue'\nexport const EventBus = new Vue()\n\n")])])]),s("p",[t._v("兄弟组件通过EventBus.$emit分发和EventBus.$on接收")]),t._v(" "),s("h4",{attrs:{id:"children-parent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#children-parent"}},[t._v("#")]),t._v(" "),s("code",[t._v("$children")]),t._v(" / "),s("code",[t._v("$parent")])]),t._v(" "),s("p",[t._v("对于这种情况可以通过查找父组件中的子组件实现，也就是 "),s("code",[t._v("this.$parent.$children")]),t._v("，在 "),s("code",[t._v("$children")]),t._v("中可以通过组件 "),s("code",[t._v("name")]),t._v(" 查询到需要的组件实例，然后进行通信。")]),t._v(" "),s("h2",{attrs:{id:"mixin-和-mixins-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mixin-和-mixins-区别"}},[t._v("#")]),t._v(" mixin 和 mixins 区别")]),t._v(" "),s("p",[s("code",[t._v("mixin")]),t._v(" 用于全局混入，以全局混入封装好的 "),s("code",[t._v("ajax")]),t._v(" 或者一些工具函数等等。")]),t._v(" "),s("p",[s("code",[t._v("mixins")]),t._v(" 应该是我们最常使用的扩展组件的方式了。如果多个组件中有相同的业务逻辑，就可以将这些逻辑剥离出来，通过 "),s("code",[t._v("mixins")]),t._v(" 混入代码，比如上拉下拉加载数据这种逻辑等等。")]),t._v(" "),s("div",{staticClass:"language-! extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("需要注意的是 mixins 混入的钩子函数会先于组件内的钩子函数执行，并且在遇到同名选项的时候也会有选择性的进行合并，具体可以阅读\n")])])]),s("p",[s("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/mixins.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"computed-的实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#computed-的实现原理"}},[t._v("#")]),t._v(" computed 的实现原理")]),t._v(" "),s("p",[t._v("computed 是一个惰性求值的观察者")]),t._v(" "),s("p",[t._v("它的内部实现了一个惰性的 watcher ，即computed wathcer，computed wathcer 不会立即求值，同时拥有一个 dep 实例。内部通过 "),s("code",[t._v("this.dirty")]),t._v("属性来标记计算是否需要重新求值")]),t._v(" "),s("p",[t._v("当 computed 的依赖状态发生改变时,就会通知这个惰性的 watcher,")]),t._v(" "),s("p",[t._v("computed watcher 通过 this.dep.subs.length 判断有没有订阅者,有的话,会重新计算,然后对比新旧值,如果变化了,会重新渲染。 (Vue 想确保不仅仅是计算属性依赖的值发生变化，而是当计算属性最终计算的值发生变化时才会触发渲染 watcher 重新渲染，本质上是一种优化。)\n没有的话,仅仅把 this.dirty = true。 (当计算属性依赖于其他数据时，属性并不会立即重新计算，只有之后其他地方需要读取属性的时候，它才会真正计算，即具备 lazy（懒计算）特性。)")]),t._v(" "),s("h2",{attrs:{id:"computed-和-watch-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#computed-和-watch-区别"}},[t._v("#")]),t._v(" computed 和 watch 区别")]),t._v(" "),s("p",[s("code",[t._v("computed")]),t._v(" 是计算属性，依赖其他属性计算值，并且 "),s("code",[t._v("computed")]),t._v(" 的值有"),s("strong",[t._v("缓存")]),t._v("，只有当计算值变化才会返回内容。内部做了一个一个 dirty ,实现缓存。当依赖的属性发生变化，就会让 dirty 变为true")]),t._v(" "),s("p",[s("code",[t._v("watch")]),t._v(" 监听到值的变化就会**执行回调，**在回调中可以进行一些逻辑操作。可设置 deep:true 深层次监听，利用递归实现。")]),t._v(" "),s("p",[t._v("所以一般来说需要依赖别的属性来动态获得值的时候可以使用 "),s("code",[t._v("computed")]),t._v("，对于监听到值的变化需要做一些复杂业务逻辑的情况可以使用 "),s("code",[t._v("watch")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"v-show-与-v-if-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-show-与-v-if-区别"}},[t._v("#")]),t._v(" v-show 与 v-if 区别")]),t._v(" "),s("p",[s("code",[t._v("v-show")]),t._v(" 无论初始条件是什么都会被渲染出来，后面只需要切换 CSS，DOM 还是一直保留着的。"),s("code",[t._v("display:none")]),t._v("属性，"),s("strong",[t._v("所以总的来说 "),s("code",[t._v("v-show")]),t._v(" 在初始渲染时有更高的开销，但是切换开销很小，更适合于频繁切换的场景。")]),t._v("，v-show是控制有没有display：none这个样式来控制显隐。")]),t._v(" "),s("p",[s("code",[t._v("v-if")]),t._v(" 条件渲染，切换条件时会"),s("strong",[t._v("触发销毁/挂载组件，"),s("strong",[t._v("所以总的来说在切")]),t._v("换时开销更高，更适合不经常切换的场景。")])]),t._v(" "),s("h2",{attrs:{id:"vue中组件的data为什么是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue中组件的data为什么是一个函数"}},[t._v("#")]),t._v(" vue中组件的data为什么是一个函数")]),t._v(" "),s("p",[t._v("组件是可复用的vue实例，一个组件被创建好之后，就可能被用在各个地方，而组件不管被复用了多少次，组件中的data数据都应该是相互隔离，互不影响的。")]),t._v(" "),s("p",[t._v("组件中的data 写成函数，数据以函数返回值定义，这样每复用一次组件，就能够获得一份独立的 data 拷贝，互不影响。原因在于采用函数定义，在 initData 时会将其作为工厂函数返回全新的 data 对象，有效规避多组件间的状态污染。")]),t._v(" "),s("div",{staticClass:"language-! extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("而在 Vue 根实例创建则不存在此限制，因为根实例只有一个。无须担心此状况。\n")])])]),s("h2",{attrs:{id:"vue-插槽的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-插槽的使用"}},[t._v("#")]),t._v(" vue 插槽的使用")]),t._v(" "),s("ul",[s("li",[t._v("匿名插槽")]),t._v(" "),s("li",[t._v("具名插槽")]),t._v(" "),s("li",[t._v("作用域插槽")])]),t._v(" "),s("p",[t._v("具体用法可"),s("a",{attrs:{href:"https://juejin.im/post/5a69ece0f265da3e5a5777ed",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://juejin.im/post/5cb0564e5188251acb530087",target:"_blank",rel:"noopener noreferrer"}},[t._v("slot详解"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://juejin.im/post/5da72b3fe51d4524cf450f8e",target:"_blank",rel:"noopener noreferrer"}},[t._v("从一个简单的 list 组件搞懂 Vue 插槽"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"nexttick的用途与原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nexttick的用途与原理"}},[t._v("#")]),t._v(" nextTick的用途与原理")]),t._v(" "),s("p",[t._v("应用场景 ：需要在试图更新后，基于新的视图进行操作。")]),t._v(" "),s("p",[t._v("例：点击按钮让原本隐藏的输入框显示，并且获取焦点")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'isShow'")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'keywords'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button @click"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"showInput"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("输入框显示，并且获取焦点"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showInput")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isShow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// document.getElementById('keywords').focus //获取不到输入框报错")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$nextTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM 更新了,可以获取")]),t._v("\n    document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keywords"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//加上$nextTick ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("vue 的数据响应通过 "),s("code",[t._v("Object.defineProperty")]),t._v(" 实现，而 vue 更新 dom 是异步的，官方这样解释：")]),t._v(" "),s("blockquote",[s("p",[t._v("Vue 异步执行 DOM 更新。只要观察到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据改变。如果同一个watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作上非常重要。然后，在下一个的事件循环“tick”中，Vue 刷新队列并执行实际 (已去重的) 工作。Vue 在内部尝试对异步队列使用原生的Promise.then和 MessageChannel，如果执行环境不支持，会采用setTimeout(fn, 0)代替。")])]),t._v(" "),s("p",[t._v("即 nextTick 原理与 Event Loop 相关")]),t._v(" "),s("p",[t._v("事件循环又分为")]),t._v(" "),s("p",[t._v("macro-task(宏任务)包括：")]),t._v(" "),s("ul",[s("li",[t._v("script(整体代码)")]),t._v(" "),s("li",[t._v("setTimeout / setInterval")]),t._v(" "),s("li",[t._v("setImmediate(Node.js 环境)")]),t._v(" "),s("li",[t._v("I/O")]),t._v(" "),s("li",[t._v("UI render")]),t._v(" "),s("li",[t._v("postMessage")]),t._v(" "),s("li",[t._v("MessageChannel")])]),t._v(" "),s("blockquote",[s("p",[t._v("不建议记住宏任务，太多，记住以下微任务即可，其他不知道的把其归类为宏任务（当然，此仅为面试时技巧）")])]),t._v(" "),s("p",[t._v("micro-task(微任务)：")]),t._v(" "),s("ul",[s("li",[t._v("process.nextTick(Node.js 环境)")]),t._v(" "),s("li",[t._v("Promise")]),t._v(" "),s("li",[t._v("Async/Await")]),t._v(" "),s("li",[t._v("MutationObserver(html5 新特性)")])]),t._v(" "),s("p",[t._v("所有微任务都会在下一次渲染前完成，目的是在渲染前更新应用程序状态。")]),t._v(" "),s("p",[s("strong",[t._v("关于事件循环执行顺序总结与速记：")]),t._v("\n先执行主线程\n遇到宏队列（macrotask）放到宏队列（macrotask）\n遇到微队列（microtask）放到微队列（microtask）\n主线程执行完毕\n执行微队列（microtask），微队列（microtask）执行完毕\n执行一次宏队列（macrotask）中的一个任务，执行完毕\n执行微队列（microtask），执行完毕\n依次循环。。。")]),t._v(" "),s("p",[t._v("nextTick 的主要实现依赖于 微任务，但 Vue 为了做好一些兼容，优先使用 promise ，其次是 html5 的 MutationObserver，然后是setTimeout。前两者属于microtask，后一个属于 macrotask。")]),t._v(" "),s("p",[t._v("优先尝试 Promise ，尝试 MutationObserver，尝试 setImmediate，最终不行在使用 setTimeout")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://juejin.im/post/5e899111f265da47d4056689",target:"_blank",rel:"noopener noreferrer"}},[t._v("从 javascript 事件循环看 Vue.nextTick 的原理和执行机制"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"proxy-与-object-defineproperty-的优劣对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proxy-与-object-defineproperty-的优劣对比"}},[t._v("#")]),t._v(" Proxy 与 Object.defineProperty 的优劣对比")]),t._v(" "),s("p",[t._v("proxy 优势 ：")]),t._v(" "),s("ul",[s("li",[t._v("能直接监听数组的变化")]),t._v(" "),s("li",[t._v("能直接监听对象而非属性")]),t._v(" "),s("li",[t._v("多达 13 种拦截方法，不限于 apply、ownKeys、deleteProperty、has等等是 Object.defineProperty 所不具备的")]),t._v(" "),s("li",[t._v("返回一个新对象，我们的操作只对于新对象，而 Object.defineProperty 只能遍历对象属性进行更改")]),t._v(" "),s("li",[t._v("性能红利")])]),t._v(" "),s("blockquote",[s("p",[t._v("在Vue中，Object.defineProperty无法监控到数组下标的变化，导致直接通过数组的下标给数组设置值，不能实时响应。 为了解决这个问题，经过vue内部处理后可以使用以下几种方法来监听数组\n（其实，Object.defineProperty本身是可以监控到数组下标的变化的，具体可参"),s("a",{attrs:{href:"https://segmentfault.com/a/1190000015783546#comment-area",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue为什么不能检测数组变动"),s("OutboundLink")],1),t._v("）")])]),t._v(" "),s("h2",{attrs:{id:"观察者模式与发布-订阅模式的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式与发布-订阅模式的区别"}},[t._v("#")]),t._v(" 观察者模式与发布-订阅模式的区别")]),t._v(" "),s("p",[s("strong",[t._v("观察者模式")])]),t._v(" "),s("p",[t._v("观察者模式是一种行为模式，它定义了一种一对多的依赖关系。让多个观察者对象同时监听某一个主体对象，这个主体对象发生状态变化时，会通知所有的观察者对象，使他们能够自动更新自己。")]),t._v(" "),s("p",[s("strong",[t._v("发布-订阅模式")])]),t._v(" "),s("p",[t._v("发布-订阅模式，发布消息的一方叫做发布者，消息不会发送给特定的接收者，而是通过一个第三方组件，也叫作信息中介，意思是发布者和订阅者并不知道对方的存在。这个信息中介把发布者和订阅者串联起来，由它来过滤和分配所有输入的消息。")]),t._v(" "),s("p",[s("strong",[t._v("差异总结")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在观察者模式中，观察者是知道Subject的，Subject一直保持对观察者进行记录。然而，在发布订阅模式中，发布者和订阅者不知道对方的存在。它们只有通过消息代理进行通信。")])]),t._v(" "),s("li",[s("p",[t._v("发布-订阅模式中，组件时松散耦合的，和观察者模式相反")])]),t._v(" "),s("li",[s("p",[t._v("观察者模式大多数时候是同步的，例如当事件触发，Subject就会去调用观察者的方法，而发布-订阅模式大多数时候是异步的（使用消息队列）。")])]),t._v(" "),s("li",[s("p",[t._v("观察者 模式需要在单个应用程序地址空间中实现，而发布-订阅更像交叉应用模式")])])]),t._v(" "),s("h2",{attrs:{id:"v-for和v-if一起使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-for和v-if一起使用"}},[t._v("#")]),t._v(" v-for和v-if一起使用")]),t._v(" "),s("p",[t._v("v-for和v-if同时使用时，有一个先后运行的优先级。因为v-for比v-if优先级更高，所以当两者用于同一标签时，v-for的每次循环中都会调用v-if。如果要遍历的数组很大，而真正要展示的数据很少时，这将造成很大的性能浪费。")]),t._v(" "),s("p",[s("strong",[t._v("解决方法")]),t._v("：ul和li搭配使用，或者是渲染父级标签下的子标签")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ul v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(item,id) in list"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ul"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("strong",[t._v("或使用过滤器将v-if中的判断转移到vue的computed的计算属性中")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ul"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(item,id) in list"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ul"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//利用vue的计算属性，过滤掉不需要的数据，剩下需要的数据再利用v-for循环遍历取出渲染")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"v-for中的key不建议使用index"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-for中的key不建议使用index"}},[t._v("#")]),t._v(" v-for中的key不建议使用index")]),t._v(" "),s("p",[t._v("我们使用 v-for 时，其内部 diff 算法使用就地复用原则，当列表数据发生更改，他是根据 key 值来判断某个值是否修改，如修改，则重新渲染，否则就复用这一项。key的作用也主要是为了高效的更新虚拟DOM，而 index 则不能做到。")]),t._v(" "),s("p",[t._v("也就是说如果你的列表顺序会改变，别用 index 作为 key，和没写基本上没区别，因为不管你数组的顺序怎么颠倒，index 都是 0, 1, 2 这样排列，导致 Vue 会复用错误的旧子节点，做很多额外的工作。列表顺序不变也尽量别用，可能会误导新人。\n"),s("a",{attrs:{href:"https://juejin.im/post/5aae19aa6fb9a028d4445d1a",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体参考： v-for中的key"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"了解-virtual-dom-为什么-virtual-dom-比原生-dom-快"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#了解-virtual-dom-为什么-virtual-dom-比原生-dom-快"}},[t._v("#")]),t._v(" 了解 Virtual DOM？为什么 Virtual DOM 比原生 DOM 快？")]),t._v(" "),s("p",[t._v("Virtual DOM 其实就是通过对文档中的 DOM 树结构进行分析，利用 js 对象将其表示出来，比如一个元素对象，包含 TagName、props 和 Children 这些属性。然后我们将这个 js 对象树给保存下来，最后再将 DOM 片段插入到文档中。")]),t._v(" "),s("p",[t._v("当我们的页面要发生改变，也就是页面 DOM 结构调整，我们首先根据变更的状态，重新构建起一棵对象树，然后将新树和旧树进行对比，记录下两棵树的差异。")]),t._v(" "),s("p",[t._v("最后将有差异的地方进行替换，应用到真正的 DOM 树中，然后视图也就完成更新。")]),t._v(" "),s("p",[s("strong",[t._v("这种方法在我们需要大量的 DOM 操作时，能够很好的提高我们的操作效率，通过在操作前确定需要做的最小修改，尽可能的减少 DOM 操作带来的重流和重绘的影响。其实 Virtual DOM 并不一定比我们真实的操作 DOM 要快，这种方法的目的是为了提高我们开发时的可维护性，在任意的情况下，都能保证一个尽量小的性能消耗去进行操作。")])]),t._v(" "),s("h2",{attrs:{id:"如何比较两个-dom-树的差异"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何比较两个-dom-树的差异"}},[t._v("#")]),t._v(" 如何比较两个 DOM 树的差异？")]),t._v(" "),s("p",[t._v("两个树的完全 diff 算法的时间复杂度为 O(n^3) ，但是在前端中，我们很少会跨层级的移动元素，所以我们只需要比较同一层级的元素进行比较，这样就可以将算法的时间复杂度降低为 O(n)。")]),t._v(" "),s("p",[t._v("算法首先会对新旧两棵树进行一个深度优先的遍历，这样每个节点都会有一个序号。在深度遍历的时候，每遍历到一个节点，我们就将这个节点和新的树中的节点进行比较，如果有差异，则将这个差异记录到一个对象中。")]),t._v(" "),s("p",[t._v("在对列表元素进行对比的时候，由于 TagName 是重复的，所以我们不能使用这个来对比。我们需要给每一个子节点加上一个 key，列表对比的时候使用 key 来进行比较，这样我们才能够复用老的 DOM 树上的节点。")]),t._v(" "),s("div",{staticClass:"language-! extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("diff 过程整体遵循 **深度优先、同层比较**的策略：两个节点比较他们是否拥有子节点或者文本节点做不同的操作，当比较两组子节点时，会先假设头尾节点相同做四次比较尝试，如果没有找到相同节点则按照通用方式遍历查找，查找结束再按情况处理剩下的节点，借助 key 通常可以更高效精确的找到相同节点，然后复用，因此整个 patch 过程也非常的高效。\n")])])]),s("h2",{attrs:{id:"vue的渲染过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue的渲染过程"}},[t._v("#")]),t._v(" Vue的渲染过程")]),t._v(" "),s("ol",[s("li",[t._v("把模板编译为 render 函数")]),t._v(" "),s("li",[t._v("实例进行挂载，执行 render 函数，生成 vnode")]),t._v(" "),s("li",[t._v("基于 vnode 执行 diff 算法，对比虚拟 dom，渲染真实 dom")]),t._v(" "),s("li",[t._v("组件内的 data 发生变化时，重新调用 render 函数，生成 vnode ，然后又回到步骤3了。")])]),t._v(" "),s("h2",{attrs:{id:"hash路由和history路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash路由和history路由"}},[t._v("#")]),t._v(" hash路由和history路由")]),t._v(" "),s("ul",[s("li",[t._v("hash模式：依靠onhashchange事件(监听location.hash的改变)")]),t._v(" "),s("li",[t._v("history模式：history.pushState 和 replaceState ，pushState()可以改变url地址且不会发送请求，replaceState()可以读取历史记录栈,还可以对浏览器记录进行修改。")])]),t._v(" "),s("h2",{attrs:{id:"vue-项目的一些优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-项目的一些优化"}},[t._v("#")]),t._v(" Vue 项目的一些优化？")]),t._v(" "),s("p",[t._v("代码层面优化：")]),t._v(" "),s("ul",[s("li",[t._v("v-if 和 v-show 区分使用")]),t._v(" "),s("li",[t._v("v-for 加key ，避免同时使用 v-if")]),t._v(" "),s("li",[t._v("路由懒加载")]),t._v(" "),s("li",[t._v("图片懒加载 v-lazy")]),t._v(" "),s("li",[t._v("事件及时销毁")]),t._v(" "),s("li",[t._v("第三方插件按需引入")])]),t._v(" "),s("p",[t._v("Webpack 层面：")]),t._v(" "),s("ul",[s("li",[t._v("对图片进行压缩")]),t._v(" "),s("li",[t._v("模板预编译")]),t._v(" "),s("li",[t._v("优化 SourceMap")]),t._v(" "),s("li",[t._v("提取公共代码")])]),t._v(" "),s("p",[t._v("基础的 Web 技术的优化：")]),t._v(" "),s("ul",[s("li",[t._v("开启 gzip")]),t._v(" "),s("li",[t._v("使用 cdn")]),t._v(" "),s("li",[t._v("浏览器缓存")]),t._v(" "),s("li",[t._v("使用 Chrome Performance 查找性能瓶颈")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5d548b83f265da03ab42471d#heading-13",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体各优化方法"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"为什么使用异步组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用异步组件"}},[t._v("#")]),t._v(" 为什么使用异步组件")]),t._v(" "),s("p",[t._v("项目过大时，核心页面访问速度变慢，使用异步组件将代码分割成小块，需要使用这个组件时在引入，可提高加载的速度。主要依赖"),s("code",[t._v("import()")]),t._v("这个语法。\n用法示例：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Home")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./components/Home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("异步组件的渲染本质上其实就是执行2次或者2次以上的渲染, 先把当前组件渲染为注释节点, 当组件加载成功后, 通过 forceRender 执行重新渲染。或者是渲染为注释节点, 然后再渲染为loading节点, 在渲染为请求完成的组件")]),t._v(" "),s("h2",{attrs:{id:"components和-vue-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#components和-vue-component"}},[t._v("#")]),t._v(" components和 Vue.component")]),t._v(" "),s("ul",[s("li",[t._v("components:局部注册组件")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("components")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Vue.component:全局注册组件")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'home'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"如何在不刷新页面的情况下-刷新组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何在不刷新页面的情况下-刷新组件"}},[t._v("#")]),t._v(" 如何在不刷新页面的情况下，刷新组件？")]),t._v(" "),s("p",[t._v("方法：")]),t._v(" "),s("ul",[s("li",[t._v("v-if")]),t._v(" "),s("li",[t._v("$forceUpdate()")]),t._v(" "),s("li",[t._v("v-key")])]),t._v(" "),s("h2",{attrs:{id:"路由懒加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由懒加载"}},[t._v("#")]),t._v(" 路由懒加载")]),t._v(" "),s("p",[t._v("路由懒加载就是把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件。")]),t._v(" "),s("p",[t._v("实现：使用命名 chunk ，和 webpack 的魔法注释")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("chunkconst "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Home")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackChunkName: "group-home" */')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./Home.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"vue路由按需加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue路由按需加载"}},[t._v("#")]),t._v(" vue路由按需加载")]),t._v(" "),s("ol",[s("li",[t._v("写两个 "),s("code",[t._v("router-view")]),t._v("出口")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("include"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"include"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 需要缓存的视图组件 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$route.meta.keepAlive"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 不需要缓存的视图组件 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!$route.meta.keepAlive"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("在Router里定义好需要缓存的视图组件")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Router")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("routes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'index'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./views/keep-alive/index.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("deepth")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/list'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./views/keep-alive/list.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("deepth")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keepAlive")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//需要被缓存")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/detail'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'detail'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./views/keep-alive/detail.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("deepth")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("在app.vue里监听路由的变化")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("include")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("watch")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$route")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果 要 to(进入) 的页面是需要 keepAlive 缓存的，把 name push 进 include数组")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keepAlive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("include"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("include"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果 要 form(离开) 的页面是 keepAlive缓存的，")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//再根据 deepth 来判断是前进还是后退")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果是后退")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keepAlive "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deepth "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deepth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("include"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("include"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5cdcbae9e51d454759351d84",target:"_blank",rel:"noopener noreferrer"}},[t._v("详情"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"keep-alive原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive原理"}},[t._v("#")]),t._v(" keep-alive原理")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.im/post/5a08f72ef265da43133ca41f",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"vue-router-导航守卫有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-导航守卫有哪些"}},[t._v("#")]),t._v(" Vue-router 导航守卫有哪些")]),t._v(" "),s("ul",[s("li",[t._v("全局钩子："),s("code",[t._v("beforeEach、beforeResolve、afterEach")])]),t._v(" "),s("li",[t._v("路由独享守卫："),s("code",[t._v("beforeEnter")])]),t._v(" "),s("li",[t._v("组件内守卫： "),s("code",[t._v("beforeRouteEnter 、beforeRouteUpdate、beforeRouteLeave")])])]),t._v(" "),s("h2",{attrs:{id:"vue-router-传参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-router-传参"}},[t._v("#")]),t._v(" vue-router 传参")]),t._v(" "),s("p",[t._v("query方式传参和接收参数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("传参")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/xxx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("query")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("id\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("接收参数")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n")])])]),s("p",[t._v("params方式传参和接收参数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("传参")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xxx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("params")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("id\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("接收参数")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id\n")])])]),s("blockquote",[s("p",[t._v("params传参，push里面只能是 name:'xxxx',不能是path:'/xxx',因为params只能用name来引入路由，如果这里写成了path，接收参数页面会是undefined！！！\nquery 和 params 传参方式的区别")])]),t._v(" "),s("ul",[s("li",[t._v("query 地址栏显示参数，params 则不会，")]),t._v(" "),s("li",[t._v("params只能用name来引入路由，query用name，path都可以")]),t._v(" "),s("li",[t._v("params参数要在路由中声明了才不会消失。")])]),t._v(" "),s("p",[t._v("详细："),s("a",{attrs:{href:"https://router.vuejs.org/zh/guide/advanced/navigation-guards.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("导航守卫"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://segmentfault.com/a/1190000012735168#comment-area",target:"_blank",rel:"noopener noreferrer"}},[t._v("query 和 params"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"route-和-router-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#route-和-router-的区别"}},[t._v("#")]),t._v(" $route 和 $router 的区别？")]),t._v(" "),s("p",[t._v("$route 是“路由信息对象”，包括 path，params，hash，query，fullPath，matched，name 等路由信息参数。")]),t._v(" "),s("p",[t._v("而 $router 是“路由实例”对象包括了路由的跳转方法，钩子函数等。")]),t._v(" "),s("h2",{attrs:{id:"组件渲染和更新过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件渲染和更新过程"}},[t._v("#")]),t._v(" 组件渲染和更新过程")]),t._v(" "),s("p",[t._v("渲染组件时，会通过 Vue.extend 方法构建子组件的构造函数，并进行实例化。最终手动调用 $mount() 进行挂载，更新组件时会 进行 patchVnode 流程，核心是 diff 算法。")]),t._v(" "),s("h2",{attrs:{id:"provide-inject-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#provide-inject-使用"}},[t._v("#")]),t._v(" provide / inject 使用")]),t._v(" "),s("div",{staticClass:"language-! extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("provide 和 inject 主要在开发高阶插件/组件库时使用。并不推荐用于普通应用程序代码中。\n")])])]),s("p",[t._v("这对选项需要一起使用，以允许一个祖先组件向其所有子孙后代注入一个依赖，不论组件层次有多深")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//父级组件 a.vue")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VmRadioGroup"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("provide")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("RadioGroup")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子组件注入")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VmRadio"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("inject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("RadioGroup")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"简单介绍-一下-vuex"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单介绍-一下-vuex"}},[t._v("#")]),t._v(" 简单介绍 一下 Vuex")]),t._v(" "),s("p",[t._v("Vuex 是一个专门为 Vue 应用程序开发的状态管理工具，每一个 Vuex 应用的核心是 store。Vuex 主要应用了"),s("strong",[t._v("单例模式")]),t._v("，这样不管我们尝试去创建多少次，它都只会返回第一次创建的哪一个唯一的实例。")]),t._v(" "),s("p",[t._v("Vuex 主要包含一下几个模块：")]),t._v(" "),s("ul",[s("li",[t._v("State：定义应用状态的数据结构")]),t._v(" "),s("li",[t._v("Getter：允许组件从 Store 中获取数据，mapGetters 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性。")]),t._v(" "),s("li",[t._v("Mutation：唯一更改 store 中状态的方法，且必须为同步")]),t._v(" "),s("li",[t._v("Action：用于 (commit) mutation，可包含任意异步操作")]),t._v(" "),s("li",[t._v("Module：可将单一 Store 拆分为多个 store 且保存在单一状态树中")])]),t._v(" "),s("h2",{attrs:{id:"为什么-vuex-的-mutation-中不能做异步操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么-vuex-的-mutation-中不能做异步操作"}},[t._v("#")]),t._v(" 为什么 Vuex 的 mutation 中不能做异步操作")]),t._v(" "),s("p",[t._v("Vuex 中所有的状态更新的唯一途径都是通过 mutation，异步通过 Action 来提交 mutation实现，这样可以使我们方便地追踪每一个状态的变化。\n如果 mutation 支持异步操作，那么就没有办法知道状态何时更新，，不能很好地追踪状态的变化，也给我们的调试带来困难。")]),t._v(" "),s("h2",{attrs:{id:"vnode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vnode"}},[t._v("#")]),t._v(" vnode")]),t._v(" "),s("p",[t._v("参考："),s("a",{attrs:{href:"https://juejin.cn/post/6971622260490797069",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue Diff算法"),s("OutboundLink")],1)]),t._v(" "),s("Vssue")],1)}),[],!1,null,null,null);a.default=r.exports}}]);